# This is an example file.
# It is meant to showcase the posibilities of the LGEScript
# If I ever finish this project, this game is not to be taken seriously
# It is an example, duh

.sprite 0 150 175 "circle.bmp"

.sprite 1 250 170 "circle.bmp"

.state 0
.transition 1
.end

.macro 0
.reset 0 & .reset 1
.end

.macro 1
.if .set $right ; .transition 2 .fi
.if .set $left ; .transition 1 .fi
.if .set $fire ; .call 0 .fi
.end

.state 1
.call 0
.set 0
.call 1
.end

.state 2
.call 0
.set 1
.call 1
.end

#.state
#127
#.if ~ $left & ~ ~ $right ; .transition 0 .fi
#.end
#
#.state 37
#.set $19 0 & .set $19 1 & .set $19 2
#.set $18 3 & .set $19 4
#.call 35
#.set $0 10 & .transition 35 & .transition 31
#.set $0 10
#.if .reset $left ; .transition 31 .fi
#.set $2 255
#.transition 0
#.set $0 255
#.end
#
#.macro 36
#.reset 117 & .reset 116 & .reset 115 & .reset 1 & .reset 227
#.reset 226 & .reset 225
#.end
#
#.macro 35
#.call 36
#.if = $0 7 ; .set 115 .fi
#.if = $0 8 ; .set 116 .fi
#.if = $0 9 ; .set 117 .fi
#.if = $0 10 ; .set 1 .fi
#.if = $0 11 ; .set 227 .fi
#.if = $0 12 ; .set 226 .fi
#.if = $0 13 ; .set 225 .fi
#.end
#
#.state 35
#.if > $0 6 & .set $left ; .set $0 - $0 1 .fi
#.if < $0 14 & .set $right ; .set $0 + $0 1 .fi
#.if .set $fire ; .transition 0 .fi
#.call 35
#.end
#
#.state 31
#.if .set $left ; .set $10 255 .fi
#.set $0 + $0 1
#.if = 0 .mod $0 2 ;
#    .set 117
#.fi
#.if = 1 .mod $0 2 ;
#    .reset 117
#.fi
#.if > $0 13 ; .transition 0 .fi
#.end
#
#.state
#3
#.set 1
#.if .set 117 & = $0 0 ; .set $0 1 .fi
##.if .set 117 & = $0 1 ; .reset 117 & .set 116 & .set $0 0 .fi
##.if .set 227 & = $1 0 ; .set $1 1 .fi
##.if .set 227 & = $1 1 ; .reset 227 & .set 226 & .set $1 0 .fi 
#.if %.4 ; .set 117 .fi       # if 40% chance
#.if = 1 1 & .reset 117 ; .set 117 .fi
#.if %.4 ; .set 227 .fi
#.if .set $right ; .transition 1 .fi
#.if = $11 3 ;
#    .reset 13 
#    .set $11 0
#.fi
#.if = $11 2 ; .reset 12 & .set 13 & .set $11 3 .fi
#.if = $11 1 ; .reset 11 & .set 12 & .set $11 2 .fi
#.if = $11 0 & .set $fire ; .set 11 & .set $11 1 .fi
#.if .set 11 & .set 115 ; .reset 115 & .reset 11 & .set 15 .fi
#.if .set 12 & .set 116 ; .reset 116 & .reset 12 & .set 16 .fi
#.if .set 13 & .set 117 ; .reset 117 & .reset 13 & .set 17 .fi
#.if .reset 11 & .set 115 ; .reset .all & .set $5 0 & .transition 5 .fi
#.if .set 225 ; .reset .all & .set $5 0 & .transition 5 .fi
#.end
#
#.state
#1
#.reset 1
#.set 2
#.if .set 117 & = $0 0 ; .set $0 1 .fi
#.if .set 117 & = $0 1 ; .reset 117 & .set 116 & .set $0 0 .fi
#.if .set 227
#    & = $1 0 ;
#
#    .set $1 1
#.fi
#.if .set 227 & = $1 1 ; .reset 227 & .set 226 & .set $1 0 .fi
#.if %.4 ; .set 117 .fi       # if 40% chance
#.if %.4 ; .set 227 .fi
#.if .set $left ; .transition 0 .fi
## idem as above logic
#.end
#
#.state 5
#.if = .mod $5 2 0 ; .set 256 .fi
#.if = .mod $5 2 1 ; .reset 256 .fi
#.if = $5 5 ; .transition 1 .fi
#.set $5 + $5 1 & .nop
#.call 43
#.end
#
#.macro 43
#.if = $42 42 ;
#    .set 256
#.fi
#.end
#
